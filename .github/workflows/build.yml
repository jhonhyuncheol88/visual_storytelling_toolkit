name: Build installers

on:
  push:
    branches: [main]
    tags: ["v*"]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build on ${{ matrix.os }} (Python ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
        python-version: ["3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller-hooks-contrib

      - name: Build with PyInstaller (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          pyinstaller --noconfirm --name "ShotCanvas" --windowed --onedir --paths=src main.py

      - name: Build with PyInstaller (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          pyinstaller --noconfirm build_windows.spec

      - name: Create DMG (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          set -euo pipefail
          APP_NAME="ShotCanvas.app"
          # PyInstaller가 dist/ShotCanvas.app 또는 dist/ShotCanvas/ShotCanvas.app 형태로 생성하는 경우가 있어 탐색
          if [ -d "dist/${APP_NAME}" ]; then
            APP_PATH="dist/${APP_NAME}"
          else
            # fallback: dist/ShotCanvas/ShotCanvas.app
            if [ -d "dist/ShotCanvas/${APP_NAME}" ]; then
              APP_PATH="dist/ShotCanvas/${APP_NAME}"
            else
              echo "Could not find app bundle in dist/**"
              ls -la dist || true
              exit 1
            fi
          fi
          mkdir -p pkg
          ln -s /Applications pkg/Applications || true
          cp -R "${APP_PATH}" pkg/
          hdiutil create -volname "ShotCanvas" -srcfolder pkg -ov -format UDZO ShotCanvas.dmg

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ShotCanvas-${{ matrix.os }}
          path: |
            dist/**
            ShotCanvas.dmg

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**


